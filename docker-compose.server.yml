networks:
  frontend:
    external: true
  app:
    driver: bridge
    internal: false

services:
   tika:
    build:
      dockerfile: Dockerfile
      context: .docker/tika
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "wget", "-O", "/dev/null", "-q", "http://127.0.0.1:9998/" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - frontend
      - app
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=frontend"
      - "traefik.http.middlewares.tika-auth.basicauth.users=${TIKA_BASIC_AUTH}"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

      # HTTP Router (for redirect)
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.rule=Host(`${COMPOSE_SERVER_DOMAIN}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.entrypoints=web"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.middlewares=redirect-to-https"

      # HTTPS Router
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-https.rule=Host(`${COMPOSE_SERVER_DOMAIN}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-https.entrypoints=websecure"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-https.service=${COMPOSE_PROJECT_NAME}-tika"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-https.middlewares=tika-auth"

      # Service
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}-tika.loadbalancer.server.port=9998"